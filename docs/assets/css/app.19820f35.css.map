{"version":3,"sources":["webpack:///src/C:/Users/Colleen/Desktop/WATS4000/Week06-Refactoring/wats4000-refactoring/src/src/App.vue","app.19820f35.css","webpack:///src/components/C:/Users/Colleen/Desktop/WATS4000/Week06-Refactoring/wats4000-refactoring/src/components/src/components/WeatherSummary.vue","webpack:///src/components/C:/Users/Colleen/Desktop/WATS4000/Week06-Refactoring/wats4000-refactoring/src/components/src/components/WeatherConditions.vue","webpack:///src/views/C:/Users/Colleen/Desktop/WATS4000/Week06-Refactoring/wats4000-refactoring/src/views/src/views/CitySearch.vue","webpack:///src/views/C:/Users/Colleen/Desktop/WATS4000/Week06-Refactoring/wats4000-refactoring/src/views/src/views/CurrentWeather.vue","webpack:///src/views/C:/Users/Colleen/Desktop/WATS4000/Week06-Refactoring/wats4000-refactoring/src/views/src/views/Forecast.vue"],"names":[],"mappings":"AAcA,KACA,6CAAA,CACA,kCAAA,CACA,iCAAA,CACA,aAAA,CACA,eAAA,CACA,YCZA,CDcA,KACA,eAAA,CACA,SAAA,CACA,QCZA,CDcA,KACA,SAAA,CACA,aAAA,CACA,SAAA,CACA,eCZA,CCMA,iCACA,oBAAA,CACA,WDiBA,CEhBA,oBACA,WAAA,CACA,kBFoBA,CElBA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UFoBA,CElBA,oBACA,kBAAA,CACA,kBFoBA,CElBA,0BACA,WFoBA,CGKA,wDACA,SAAA,CACA,oBAAA,CACA,WHMA,CGJA,wCAEA,eHMA,CGHA,oBACA,oBAAA,CACA,SHKA,CGHA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YAAA,CACA,UHKA,CGHA,iCACA,oBAAA,CACA,WHKA,CGHA,oBACA,WAAA,CACA,kBHKA,CGHA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UHKA,CGHA,oBACA,kBAAA,CACA,kBHKA,CGHA,0BACA,WHKA,CGFA,mBACA,aHIA,CI3DA,4BACA,SAAA,CACA,oBAAA,CACA,WJ+DA,CI7DA,wCAEA,eJ+DA,CI5DA,oBACA,oBAAA,CACA,SJ8DA,CI5DA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YJ8DA,CI5DA,iCACA,oBAAA,CACA,WJ8DA,CI5DA,oBACA,WAAA,CACA,kBJ8DA,CI5DA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UJ8DA,CI5DA,oBACA,kBAAA,CACA,kBJ8DA,CI5DA,0BACA,WJ8DA,CI5DA,mBACA,aJ8DA,CKtDA,4BACA,SAAA,CACA,oBAAA,CACA,WL0DA,CKxDA,wCAEA,eL0DA,CKvDA,oBACA,oBAAA,CACA,SLyDA,CKvDA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YAAA,CACA,ULyDA,CKtDA,mBACA,aLwDA,CKtDA,iCACA,oBAAA,CACA,WLwDA,CKtDA,oBACA,WAAA,CACA,kBLwDA,CKtDA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,ULwDA,CKtDA,oBACA,kBAAA,CACA,kBLwDA,CKtDA,0BACA,WLwDA","file":"app.19820f35.css","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <h1>Weather Service</h1>\r\n    <router-view/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'app'\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n  padding: 20px;\r\n}\r\nhtml {\r\n  background: #666;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\nbody {\r\n  width: 75%;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  background: #fff;\r\n}\r\n/* dl {\r\n  padding: 5px;\r\n  background: #e8e8e8;\r\n}\r\ndt {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\r\n}\r\ndd {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\r\n}\r\ndt::after {\r\n  content: \":\";\r\n} */\r\n</style>\r\n","\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n  padding: 20px;\n}\nhtml {\r\n  background: #666;\r\n  padding: 0;\r\n  margin: 0;\n}\nbody {\r\n  width: 75%;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  background: #fff;\n}\r\n/* dl {\r\n  padding: 5px;\r\n  background: #e8e8e8;\r\n}\r\ndt {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\r\n}\r\ndd {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\r\n}\r\ndt::after {\r\n  content: \":\";\r\n} */\r\n\n\n.weatherSummary[data-v-1dbc3b3f] {\n  display: inline-block;\n  width: 100px;\n}\n\n\ndl[data-v-f36e88c6] {\r\n  padding: 5px;\r\n  background: #e8e8e8;\n}\ndt[data-v-f36e88c6] {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\n}\ndd[data-v-f36e88c6] {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-f36e88c6]::after {\r\n  content: \":\";\n}\r\n\n\n.errors li[data-v-cf3fb802] {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\n\n\n.errors li[data-v-99782cd6] {\r\n  color: red;\r\n  border: solid red 1px;\r\n  padding: 5px;\n}\nh1[data-v-99782cd6],\r\nh2[data-v-99782cd6] {\r\n  font-weight: normal;\n}\nul[data-v-99782cd6] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\nli[data-v-99782cd6] {\r\n  display: inline-block;\r\n  width: 300px;\r\n  min-height: 300px;\r\n  border: solid 1px #e8e8e8;\r\n  padding: 10px;\r\n  margin: 5px;\n}\n.weatherSummary[data-v-99782cd6] {\r\n  display: inline-block;\r\n  width: 100px;\n}\ndl[data-v-99782cd6] {\r\n  padding: 5px;\r\n  background: #e8e8e8;\n}\ndt[data-v-99782cd6] {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\n}\ndd[data-v-99782cd6] {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-99782cd6]::after {\r\n  content: \":\";\n}\na[data-v-99782cd6] {\r\n  color: #42b983;\n}\r\n\n\n.errors li[data-v-f63443c2] {\r\n  color: red;\r\n  border: solid red 1px;\r\n  padding: 5px;\n}\nh1[data-v-f63443c2],\r\nh2[data-v-f63443c2] {\r\n  font-weight: normal;\n}\nul[data-v-f63443c2] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\nli[data-v-f63443c2] {\r\n  display: inline-block;\r\n  width: 300px;\r\n  min-height: 300px;\r\n  border: solid 1px #e8e8e8;\r\n  padding: 10px;\n}\n.weatherSummary[data-v-f63443c2] {\r\n  display: inline-block;\r\n  width: 100px;\n}\ndl[data-v-f63443c2] {\r\n  padding: 5px;\r\n  background: #e8e8e8;\n}\ndt[data-v-f63443c2] {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\n}\ndd[data-v-f63443c2] {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-f63443c2]::after {\r\n  content: \":\";\n}\na[data-v-f63443c2] {\r\n  color: #42b983;\n}\r\n\n\n.errors li[data-v-5300b480] {\r\n  color: red;\r\n  border: solid red 1px;\r\n  padding: 5px;\n}\nh1[data-v-5300b480],\r\nh2[data-v-5300b480] {\r\n  font-weight: normal;\n}\nul[data-v-5300b480] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\nli[data-v-5300b480] {\r\n  display: inline-block;\r\n  width: 200px;\r\n  min-height: 300px;\r\n  border: solid 1px #e8e8e8;\r\n  padding: 10px;\r\n  margin: 5px;\n}\na[data-v-5300b480] {\r\n  color: #42b983;\n}\n.weatherSummary[data-v-5300b480] {\r\n  display: inline-block;\r\n  width: 100px;\n}\ndl[data-v-5300b480] {\r\n  padding: 5px;\r\n  background: #e8e8e8;\n}\ndt[data-v-5300b480] {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\n}\ndd[data-v-5300b480] {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-5300b480]::after {\r\n  content: \":\";\n}\r\n\n\n/*# sourceMappingURL=app.19820f35.css.map*/","<template>\r\n  <div>\r\n    <div v-for=\"weatherSummary in weatherData\" class=\"weatherSummary\" :key=\"weatherSummary.id\">\r\n      <img v-bind:src=\"'http://openweathermap.org/img/w/' + weatherSummary.icon + '.png'\" v-bind:alt=\"weatherSummary.main\">\r\n      <br>\r\n      <b>{{ weatherSummary.main }}</b>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'WeatherSummary',\r\n  data () {\r\n    return {\r\n\r\n    }\r\n  },\r\n  props: {\r\n    weatherData: {}\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .weatherSummary {\r\n    display: inline-block;\r\n    width: 100px;\r\n  }\r\n</style>","<template>\r\n  <div>\r\n    <dl>\r\n      <dt v-if=\"conditions.temp != conditions.temp_min\">Current Temperature</dt>\r\n      <dd v-if=\"conditions.temp != conditions.temp_min\">{{ conditions.temp }}%</dd>\r\n      <dt>Humidity</dt>\r\n      <dd>{{ conditions.humidity }}%</dd>\r\n      <dt>High</dt>\r\n      <dd>{{ conditions.temp_max }}&deg;F</dd>\r\n      <dt>Low</dt>\r\n      <dd>{{ conditions.temp_min }}&deg;F</dd>\r\n    </dl>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"WeatherConditions\",\r\n  data() {\r\n    return {};\r\n  },\r\n  props: {\r\n    conditions: {}\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ndl {\r\n  padding: 5px;\r\n  background: #e8e8e8;\r\n}\r\ndt {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\r\n}\r\ndd {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\r\n}\r\ndt::after {\r\n  content: \":\";\r\n}\r\n</style>","<template>\r\n  <div>\r\n    <h2>City Search</h2>\r\n    <form v-on:submit.prevent=\"getCities\">\r\n      <p>\r\n        Enter city name:\r\n        <input type=\"text\" v-model=\"query\" placeholder=\"Paris\">\r\n        <button type=\"submit\">Go</button>\r\n      </p>\r\n    </form>\r\n    <ul class=\"cities\" v-if=\"results && results.list.length > 0\">\r\n      <li v-for=\"(city,index) in results.list\" :key=\"index\">\r\n        <h2>{{ city.name }}, {{ city.sys.country }}</h2>\r\n        <p>\r\n          <router-link\r\n            v-bind:to=\"{ name: 'CurrentWeather', params: { cityId: city.id } }\"\r\n          >View Current Weather</router-link>\r\n        </p>\r\n\r\n        <weather-summary v-bind:weatherData=\"city.weather\"></weather-summary>\r\n        <weather-conditions v-bind:conditions=\"city.main\"></weather-conditions>\r\n        \r\n      </li>\r\n    </ul>\r\n    <error-list v-bind:errorList=\"errors\"></error-list>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { API } from \"@/common/api\";\r\nimport WeatherSummary from \"@/components/WeatherSummary\";\r\nimport WeatherConditions from \"@/components/WeatherConditions\";\r\nimport ErrorList from \"@/components/ErrorList\";\r\n\r\nexport default {\r\n  name: \"CitySearch\",\r\n  data() {\r\n    return {\r\n      results: null,\r\n      errors: [],\r\n      query: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    getCities: function() {\r\n      API.get(\"find\", {\r\n        params: {\r\n          q: this.query\r\n        }\r\n      })\r\n\r\n        .then(response => {\r\n          this.results = response.data;\r\n        })\r\n        .catch(error => {\r\n          this.errors.push(error);\r\n        });\r\n    }\r\n  },\r\n  components: {\r\n    \"weather-summary\": WeatherSummary,\r\n    \"weather-conditions\": WeatherConditions,\r\n    \"error-list\": ErrorList\r\n  }\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.errors li {\r\n  color: red;\r\n  border: solid red 1px;\r\n  padding: 5px;\r\n}\r\nh1,\r\nh2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  width: 300px;\r\n  min-height: 300px;\r\n  border: solid 1px #e8e8e8;\r\n  padding: 10px;\r\n  margin: 5px;\r\n}\r\n.weatherSummary {\r\n  display: inline-block;\r\n  width: 100px;\r\n}\r\ndl {\r\n  padding: 5px;\r\n  background: #e8e8e8;\r\n}\r\ndt {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\r\n}\r\ndd {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\r\n}\r\ndt::after {\r\n  content: \":\";\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n</style>\r\n\r\n\r\n","<template>\r\n  <div>\r\n    <h2>\r\n      Current Weather\r\n      <span\r\n        v-if=\"weatherData\"\r\n      >for {{ weatherData.name }}, {{weatherData.sys.country }}</span>\r\n    </h2>\r\n    <p>\r\n      <router-link to=\"/\">Home</router-link>|\r\n      <router-link\r\n        v-bind:to=\"{ name: 'Forecast', params: { cityId: $route.params.cityId } }\"\r\n      >View 5-Day Forecast</router-link>\r\n    </p>\r\n    <div v-if=\"weatherData && errors.length===0\">\r\n      <weather-summary v-bind:weatherData=\"weatherData.weather\"></weather-summary>\r\n      <weather-conditions v-bind:conditions=\"weatherData.main\"></weather-conditions>\r\n      <error-list v-bind:errorList=\"errors\"></error-list>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { API } from \"@/common/api\";\r\nimport WeatherSummary from \"@/components/WeatherSummary\";\r\nimport WeatherConditions from \"@/components/WeatherConditions\";\r\nimport ErrorList from \"@/components/ErrorList\";\r\n\r\nexport default {\r\n  name: \"CurrentWeather\",\r\n  data() {\r\n    return {\r\n      weatherData: null,\r\n      errors: [],\r\n      query: \"\"\r\n    };\r\n  },\r\n  created() {\r\n    API.get(\"weather\", {\r\n      params: {\r\n        id: this.$route.params.cityId\r\n      }\r\n    })\r\n\r\n      .then(response => {\r\n        this.weatherData = response.data;\r\n      })\r\n      .catch(error => {\r\n        this.errors.push(error);\r\n      });\r\n  },\r\n  components: {\r\n    \"weather-summary\": WeatherSummary,\r\n    \"weather-conditions\": WeatherConditions,\r\n    \"error-list\": ErrorList\r\n  }\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.errors li {\r\n  color: red;\r\n  border: solid red 1px;\r\n  padding: 5px;\r\n}\r\nh1,\r\nh2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  width: 300px;\r\n  min-height: 300px;\r\n  border: solid 1px #e8e8e8;\r\n  padding: 10px;\r\n}\r\n.weatherSummary {\r\n  display: inline-block;\r\n  width: 100px;\r\n}\r\ndl {\r\n  padding: 5px;\r\n  background: #e8e8e8;\r\n}\r\ndt {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\r\n}\r\ndd {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\r\n}\r\ndt::after {\r\n  content: \":\";\r\n}\r\na {\r\n  color: #42b983;\r\n}\r\n</style>\r\n\r\n\r\n","<template>\r\n  <div>\r\n    <h2>\r\n      Five Day Hourly Forecast\r\n      <span\r\n        v-if=\"weatherData\"\r\n      >for {{ weatherData.city.name }}, {{weatherData.city.country }}</span>\r\n    </h2>\r\n    <p>\r\n      <router-link to=\"/\">Home</router-link>|\r\n      <router-link v-bind:to=\"{ name: 'CurrentWeather', params: { cityId: $route.params.cityId } }\">\r\n        Current Weather\r\n        <span\r\n          v-if=\"weatherData\"\r\n        >for {{ weatherData.city.name }}, {{weatherData.city.country }}</span>\r\n      </router-link>\r\n    </p>\r\n\r\n    <ul v-if=\"weatherData && errors.length===0\" class=\"forecast\">\r\n      <li v-for=\"(forecast,index) in weatherData.list\" :key=\"index\">\r\n        <h3>{{ forecast.dt|formatDate }}</h3>\r\n\r\n        <weather-summary v-bind:weatherData=\"forecast.weather\"></weather-summary>\r\n        <weather-conditions v-bind:conditions=\"forecast.main\"></weather-conditions>\r\n      </li>\r\n    </ul>\r\n\r\n    <error-list v-bind:errorList=\"errors\"></error-list>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { API } from \"@/common/api\";\r\nimport WeatherSummary from \"@/components/WeatherSummary\";\r\nimport WeatherConditions from \"@/components/WeatherConditions\";\r\nimport ErrorList from \"@/components/ErrorList\";\r\n\r\nexport default {\r\n  name: \"Forecast\",\r\n  data() {\r\n    return {\r\n      weatherData: null,\r\n      errors: [],\r\n      query: \"\"\r\n    };\r\n  },\r\n  created() {\r\n    API.get(\"forecast\", {\r\n      params: {\r\n        id: this.$route.params.cityId\r\n      }\r\n    })\r\n\r\n      .then(response => {\r\n        this.weatherData = response.data;\r\n      })\r\n      .catch(error => {\r\n        this.errors.push(error);\r\n      });\r\n  },\r\n  filters: {\r\n    formatDate: function(timestamp) {\r\n      let date = new Date(timestamp * 1000);\r\n      const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n      ];\r\n      const weekdays = [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\"\r\n      ];\r\n      //let weekday = date.getDay();\r\n      let daynum = date.getDate();\r\n      let month = date.getMonth();\r\n\r\n      let hour = date.getHours();\r\n      if (hour === 12) {\r\n        hour = \"Noon\";\r\n      } else if (hour === 0) {\r\n        hour = \"Midnight\";\r\n      } else if (hour > 12) {\r\n        hour = hour - 12 + \"PM\";\r\n      } else if (hour < 12) {\r\n        hour = hour + \"AM\";\r\n      }\r\n      //let year = date.getFullYear();\r\n      return `${months[month]} ${daynum} @ ${hour}`;\r\n    }\r\n  },\r\n  components: {\r\n    \"weather-summary\": WeatherSummary,\r\n    \"weather-conditions\": WeatherConditions,\r\n    \"error-list\": ErrorList\r\n  }\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.errors li {\r\n  color: red;\r\n  border: solid red 1px;\r\n  padding: 5px;\r\n}\r\nh1,\r\nh2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  width: 200px;\r\n  min-height: 300px;\r\n  border: solid 1px #e8e8e8;\r\n  padding: 10px;\r\n  margin: 5px;\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n.weatherSummary {\r\n  display: inline-block;\r\n  width: 100px;\r\n}\r\ndl {\r\n  padding: 5px;\r\n  background: #e8e8e8;\r\n}\r\ndt {\r\n  float: left;\r\n  clear: left;\r\n  width: 120px;\r\n  text-align: right;\r\n  font-weight: bold;\r\n  color: blue;\r\n}\r\ndd {\r\n  margin: 0 0 0 130px;\r\n  padding: 0 0 0.5em 0;\r\n}\r\ndt::after {\r\n  content: \":\";\r\n}\r\n</style>\r\n\r\n\r\n"]}